From 0f9cc1062ddca5a58ac1aad39f112ad6053d85d5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Ol=C5=A1=C3=A1k?= <marek.olsak@amd.com>
Date: Sun, 5 Feb 2017 01:24:35 +0100
Subject: [PATCH 27/33] debug

---
 src/gallium/drivers/radeon/r600_query.c | 9 ++++++++-
 src/gallium/drivers/radeon/r600_query.h | 1 +
 src/mesa/main/glthread.c                | 6 ++++++
 src/util/set.c                          | 2 ++
 4 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/src/gallium/drivers/radeon/r600_query.c b/src/gallium/drivers/radeon/r600_query.c
index bcc573169b2..2571a894cd8 100644
--- a/src/gallium/drivers/radeon/r600_query.c
+++ b/src/gallium/drivers/radeon/r600_query.c
@@ -84,7 +84,7 @@ static enum radeon_value_id winsys_id_from_type(unsigned type)
 	default: unreachable("query type does not correspond to winsys id");
 	}
 }
-
+extern unsigned thread_syncs;
 static bool r600_query_sw_begin(struct r600_common_context *rctx,
 				struct r600_query *rquery)
 {
@@ -131,6 +131,9 @@ static bool r600_query_sw_begin(struct r600_common_context *rctx,
 	case R600_QUERY_NUM_L2_WRITEBACKS:
 		query->begin_result = rctx->num_L2_writebacks;
 		break;
+	case R600_QUERY_THREAD_SYNCS:
+		query->begin_result = thread_syncs;
+		break;
 	case R600_QUERY_REQUESTED_VRAM:
 	case R600_QUERY_REQUESTED_GTT:
 	case R600_QUERY_MAPPED_VRAM:
@@ -255,6 +258,9 @@ static bool r600_query_sw_end(struct r600_common_context *rctx,
 	case R600_QUERY_NUM_L2_WRITEBACKS:
 		query->end_result = rctx->num_L2_writebacks;
 		break;
+	case R600_QUERY_THREAD_SYNCS:
+		query->end_result = thread_syncs;
+		break;
 	case R600_QUERY_REQUESTED_VRAM:
 	case R600_QUERY_REQUESTED_GTT:
 	case R600_QUERY_MAPPED_VRAM:
@@ -1778,6 +1784,7 @@ static struct pipe_driver_query_info r600_driver_query_list[] = {
 	X("VRAM-vis-usage",		VRAM_VIS_USAGE,		BYTES, AVERAGE),
 	X("GTT-usage",			GTT_USAGE,		BYTES, AVERAGE),
 	X("back-buffer-ps-draw-ratio",	BACK_BUFFER_PS_DRAW_RATIO, UINT64, AVERAGE),
+	X("thread-syncs",		THREAD_SYNCS,		UINT64, AVERAGE),
 
 	/* GPIN queries are for the benefit of old versions of GPUPerfStudio,
 	 * which use it as a fallback path to detect the GPU type.
diff --git a/src/gallium/drivers/radeon/r600_query.h b/src/gallium/drivers/radeon/r600_query.h
index 84b834c1f71..5517595df51 100644
--- a/src/gallium/drivers/radeon/r600_query.h
+++ b/src/gallium/drivers/radeon/r600_query.h
@@ -98,6 +98,7 @@ enum {
 	R600_QUERY_NUM_SHADERS_CREATED,
 	R600_QUERY_BACK_BUFFER_PS_DRAW_RATIO,
 	R600_QUERY_NUM_SHADER_CACHE_HITS,
+	R600_QUERY_THREAD_SYNCS,
 	R600_QUERY_GPIN_ASIC_ID,
 	R600_QUERY_GPIN_NUM_SIMD,
 	R600_QUERY_GPIN_NUM_RB,
diff --git a/src/mesa/main/glthread.c b/src/mesa/main/glthread.c
index 27f011e95a5..b17d9c64ca5 100644
--- a/src/mesa/main/glthread.c
+++ b/src/mesa/main/glthread.c
@@ -137,6 +137,7 @@ _mesa_glthread_init(struct gl_context *ctx)
    glthread_allocate_batch(ctx);
 
    pthread_create(&glthread->thread, NULL, glthread_worker, ctx);
+   puts(__func__);
 }
 
 void
@@ -177,6 +178,7 @@ _mesa_glthread_destroy(struct gl_context *ctx)
    /* Remove ourselves from the dispatch table. */
    ctx->CurrentClientDispatch = ctx->CurrentServerDispatch;
    _glapi_set_dispatch(ctx->CurrentClientDispatch);
+   puts(__func__);
 }
 
 void
@@ -215,6 +217,9 @@ _mesa_glthread_flush_batch(struct gl_context *ctx)
    pthread_mutex_unlock(&glthread->mutex);
 }
 
+#include "util/u_atomic.h"
+
+extern unsigned thread_syncs;
 /**
  * Waits for all pending batches have been unmarshaled.
  *
@@ -245,6 +250,7 @@ _mesa_glthread_finish(struct gl_context *ctx)
       pthread_cond_wait(&glthread->work_done, &glthread->mutex);
 
    pthread_mutex_unlock(&glthread->mutex);
+   p_atomic_inc(&thread_syncs);
 }
 
 #endif
diff --git a/src/util/set.c b/src/util/set.c
index 99abefd0632..fa06fcf8e2e 100644
--- a/src/util/set.c
+++ b/src/util/set.c
@@ -39,6 +39,8 @@
 #include "ralloc.h"
 #include "set.h"
 
+unsigned thread_syncs;
+
 /*
  * From Knuth -- a good choice for hash/rehash values is p, p-2 where
  * p and p-2 are both prime.  These tables are sized to have an extra 10%
-- 
2.11.1

