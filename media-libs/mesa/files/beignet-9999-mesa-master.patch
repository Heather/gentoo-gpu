diff --git a/src/cl_utils.h b/src/cl_utils.h
index fa900a7..9c18503 100644
--- a/src/cl_utils.h
+++ b/src/cl_utils.h
@@ -80,6 +80,12 @@ do {                                                                \
 #define MIN(x0, x1) ((x0) < (x1) ? (x0) : (x1))
 #define ALIGN(A, B) (((A) % (B)) ? (A) + (B) - ((A) % (B)) : (A))
 
+static INLINE unsigned
+u_minify(unsigned value, unsigned levels)
+{
+    return MAX(1, value >> levels);
+}
+
 #define DO_ALLOC_ERROR                                      \
 do {                                                        \
   err = CL_OUT_OF_HOST_MEMORY;                              \
diff --git a/src/intel/intel_dri_resource_sharing.c b/src/intel/intel_dri_resource_sharing.c
index b31844e..2c1f4be 100644
--- a/src/intel/intel_dri_resource_sharing.c
+++ b/src/intel/intel_dri_resource_sharing.c
@@ -41,6 +41,8 @@
 #include "intel_regions.h"
 #include "intel_context.h"
 
+#include "cl_utils.h"
+
 #include "intel_dri_resource_sharing.h"
 #include "intel_dri_resource_sharing_int.h"
 
@@ -64,8 +66,8 @@ intel_setup_cl_region_from_mipmap_tree(void *driver,
    _intel_region_get_tile_masks(mt->region, &mask_x, &mask_y, false);
    _intel_miptree_get_image_offset(mt, level, zoffset, &draw_x, &draw_y);
 
-   region->w = mt->level[level].width;
-   region->h = mt->level[level].height;
+   region->w = u_minify(mt->physical_width0, level);
+   region->h = u_minify(mt->physical_height0, level);
    region->tile_x = draw_x & mask_x;
    region->tile_y = draw_y & mask_y;
    region->tiling = mt->region->tiling;
@@ -119,12 +121,12 @@ intel_get_gl_obj_from_texture(void *driver,
 }
 
 static GLenum
-get_cl_gl_format(gl_format format)
+get_cl_mesa_format(mesa_format format)
 {
    switch (format) {
-   case MESA_FORMAT_RGBA8888:
+   case MESA_FORMAT_A8B8G8R8_UNORM:
       return GL_RGBA;
-   case MESA_FORMAT_ARGB8888:
+   case MESA_FORMAT_B8G8R8A8_UNORM:
       return GL_BGRA;
    default:
       return GL_BGRA;
@@ -146,7 +148,7 @@ intelAcquireTexture(void *driver, __DRIcontext *context, GLenum target,
    if (obj == NULL)
      return false;
    iobj = intel_texture_object(obj);
-   region->gl_format = get_cl_gl_format(obj->Image[face][level]->TexFormat);
+   region->mesa_format = get_cl_mesa_format(obj->Image[face][level]->TexFormat);
    return intel_setup_cl_region_from_mipmap_tree(driver, intel, iobj->mt, level, 0, region);
 }
 
diff --git a/src/intel/intel_dri_resource_sharing.h b/src/intel/intel_dri_resource_sharing.h
index 6d2ce4d..bec4625 100644
--- a/src/intel/intel_dri_resource_sharing.h
+++ b/src/intel/intel_dri_resource_sharing.h
@@ -11,7 +11,7 @@ struct _intel_dri_share_image_region {
   size_t offset;
   size_t tile_x;
   size_t tile_y;
-  unsigned int gl_format;
+  unsigned int mesa_format;
   size_t row_pitch, slice_pitch;
 };
 
diff --git a/src/intel/intel_driver.c b/src/intel/intel_driver.c
index f88a105..4aa8061 100644
--- a/src/intel/intel_driver.c
+++ b/src/intel/intel_driver.c
@@ -538,7 +538,7 @@ intel_alloc_buffer_from_texture_egl(cl_context ctx, unsigned int target,
     goto out;
   }
   region.tiling = get_cl_tiling(region.tiling);
-  if (cl_get_clformat_from_texture(region.gl_format, &cl_format) != 0)
+  if (cl_get_clformat_from_texture(region.mesa_format, &cl_format) != 0)
     goto error;
   intel_fmt = cl_image_get_intel_format(&cl_format);
   if (intel_fmt == INTEL_UNSUPPORTED_FORMAT)
