From a47ef55a3119703ff14057819220d026450478b8 Mon Sep 17 00:00:00 2001
From: "Juan A. Suarez Romero" <jasuarez@igalia.com>
Date: Tue, 19 Jul 2016 15:47:22 +0000
Subject: [PATCH 07/32] i965/fs: consider execsize can be double in
 lower_simd_with

In IVB/BYT, for instructions dealing with DF, execsize will be
double in the final code.

So take this in account when checking if instructions should be split.

v2 (Matt):
- Fix typos.
- Rename VLV to BYT.
---
 src/mesa/drivers/dri/i965/brw_fs.cpp | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/src/mesa/drivers/dri/i965/brw_fs.cpp b/src/mesa/drivers/dri/i965/brw_fs.cpp
index f46710d589..bedbd3864d 100644
--- a/src/mesa/drivers/dri/i965/brw_fs.cpp
+++ b/src/mesa/drivers/dri/i965/brw_fs.cpp
@@ -4525,8 +4525,15 @@ static unsigned
 get_fpu_lowered_simd_width(const struct gen_device_info *devinfo,
                            const fs_inst *inst)
 {
+   /* Note that in IVB/BYT for instructions that handles DF, we will double
+    * the exec_size. So take this value for calculus purposes.
+    */
+   unsigned exec_size = inst->exec_size;
+   if (devinfo->gen == 7 && !devinfo->is_haswell && inst->exec_data_size() == 8)
+      exec_size *= 2;
+
    /* Maximum execution size representable in the instruction controls. */
-   unsigned max_width = MIN2(32, inst->exec_size);
+   unsigned max_width = MIN2(32, exec_size);
 
    /* According to the PRMs:
     *  "A. In Direct Addressing mode, a source cannot span more than 2
@@ -4630,6 +4637,10 @@ get_fpu_lowered_simd_width(const struct gen_device_info *devinfo,
          max_width = MIN2(max_width, channels_per_grf);
    }
 
+   /* If we have doubled exec_size, then readjust max_width if required. */
+   if (exec_size != inst->exec_size && max_width == exec_size)
+      max_width = inst->exec_size;
+
    /* Only power-of-two execution sizes are representable in the instruction
     * control fields.
     */
-- 
2.11.0

