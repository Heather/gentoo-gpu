From 36230033d2e1fbc58f34a4281a2988d646f44528 Mon Sep 17 00:00:00 2001
From: "Juan A. Suarez Romero" <jasuarez@igalia.com>
Date: Wed, 3 Aug 2016 11:51:44 +0000
Subject: [PATCH 10/32] i965/fs: fix lower SIMD width for IVB/BYT's
 MOVE_INDIRECT

Previous to Broadwell, we have 8 registers for MOV_INDIRECT. But if
IVB/BYT deal with DFs, we will double the exec_size from 8 to 16.

This patch limits the SIMD width to 4 in this case.
---
 src/mesa/drivers/dri/i965/brw_fs.cpp | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/mesa/drivers/dri/i965/brw_fs.cpp b/src/mesa/drivers/dri/i965/brw_fs.cpp
index bedbd3864d..0d2a9a6317 100644
--- a/src/mesa/drivers/dri/i965/brw_fs.cpp
+++ b/src/mesa/drivers/dri/i965/brw_fs.cpp
@@ -4933,8 +4933,13 @@ get_lowered_simd_width(const struct gen_device_info *devinfo,
       return MIN2(8, inst->exec_size);
 
    case SHADER_OPCODE_MOV_INDIRECT:
-      /* Prior to Broadwell, we only have 8 address subregisters */
-      return MIN3(devinfo->gen >= 8 ? 16 : 8,
+      /* Prior to Broadwell, we only have 8 address subregisters. Special case
+       * for IVB/BYT and DF types: set to 4 (exec_size will be later
+       * doubled).
+       */
+      return MIN3(devinfo->gen >= 8 ? 16 : ((devinfo->gen == 7 &&
+                                             !devinfo->is_haswell &&
+                                             inst->exec_data_size() == 8) ? 4 : 8),
                   2 * REG_SIZE / (inst->dst.stride * type_sz(inst->dst.type)),
                   inst->exec_size);
 
-- 
2.11.0

